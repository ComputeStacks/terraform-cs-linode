# Examples to automatically configure your DNS records

variable "default_zone_ttl" {
  type = number
  default = 300
}

##
# Example using the Linode DNS Manager

variable "linode_zone_id" {
  type = string
}

resource "linode_domain_record" "zone_portal" {
    domain_id = var.linode_zone_id
    name = var.cs_portal_domain
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.controller.ip_address
}
resource "linode_domain_record" "zone_registry" {
    domain_id = var.linode_zone_id
    name = var.cs_registry_domain
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.registry.ip_address
}
resource "linode_domain_record" "zone_metrics" {
    domain_id = var.linode_zone_id
    name = var.cs_metrics_domain
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.metrics.ip_address
}
resource "linode_domain_record" "zone_app" {
    domain_id = var.linode_zone_id
    name = var.cs_app_url
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.node_cluster.0.ip_address
}
resource "linode_domain_record" "zone_app_wildcard" {
    domain_id = var.linode_zone_id
    name = format("*.%s", var.cs_app_url)
    record_type = "CNAME"
    ttl_sec = var.default_zone_ttl
    target = format("%s.%s", var.cs_app_url, var.zone_name)
}
resource "linode_domain_record" "ns1" {
    domain_id = var.linode_zone_id
    name = var.primary_nameserver_domain
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.nsone.ip_address
}
resource "linode_domain_record" "ns2" {
    domain_id = var.linode_zone_id
    name = var.secondary_nameserver_domain
    record_type = "A"
    ttl_sec = var.default_zone_ttl
    target = linode_instance.nstwo.ip_address
}

##
# Exmaple using the Terraform DNS provider (RFC 2136 dns updates).
# Source: https://registry.terraform.io/providers/hashicorp/dns/latest/docs
#
# We (ComputeStacks) use this to test internally against our PowerDNS server.
# You may optionally configure any other DNS provider, such as AWS route53, or cloudflare.
#
# For PowerDNS specific instructions, please see: https://doc.powerdns.com/authoritative/dnsupdate.html#per-zone-settings
#
# NOTES: 
#   - Take note of the `ALLOW-DNSUPDATE-FROM` add metadata step and ensure the correct IPs are added.
#   - When adding the key_name, make sure it's a FQDN. Even if your DNS server does not require it, Terraform does.
#

provider "dns" {
  update {
    server = "ns1.example.com"
    key_name = "my.key.name."
    key_algorithm = "hmac-md5"
    key_secret = "my-secret"
  }
}

resource "dns_a_record_set" "controller" {
    zone = format("%s.", var.zone_name)
    name = var.cs_portal_domain
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.controller.ip_address ]
}

resource "dns_a_record_set" "registry" {
    zone = format("%s.", var.zone_name)
    name = var.cs_registry_domain
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.registry.ip_address ]
}
resource "dns_a_record_set" "metrics" {
    zone = format("%s.", var.zone_name)
    name = var.cs_metrics_domain
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.metrics.ip_address ]
}
resource "dns_a_record_set" "app" {
    zone = format("%s.", var.zone_name)
    name = var.cs_app_url
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.node_cluster.0.ip_address ]
}
resource "dns_cname_record" "app_wildcard" {
    zone = format("%s.", var.zone_name)
    name = format("*.%s", var.cs_app_url)
    ttl = var.default_zone_ttl
    cname = format("%s.%s.", var.cs_app_url, var.zone_name)
}

resource "dns_a_record_set" "ns1" {
    zone = format("%s.", var.primary_nameserver_zone)
    name = var.primary_nameserver_domain
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.nsone.ip_address ]
}

resource "dns_a_record_set" "ns2" {
    zone = format("%s.", var.secondary_nameserver_zone)
    name = var.secondary_nameserver_domain
    ttl = var.default_zone_ttl
    addresses = [ linode_instance.nstwo.ip_address ]
}
